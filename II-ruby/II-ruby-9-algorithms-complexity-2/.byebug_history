exit
c
exit
arr[begin_idx..end_idx]
current
exit
c
exit
current
arr[begin_idx + 1..end_idx]
(current + arr[begin_idx + 1..end_idx]).sum
exit
c

c
s
 (begin_idx + 1..-1)
c
current
end_idx
n
end_idx
next_idx...arr.length
1..arr.length
next_idx
n
1..arr.length
next_idx
list=
end_idx
next_idx
n
next_idx
n
next_idx
n
next_idx
end_idx
n
current
n
list=
next_idx..arr.length
next_idx...arr.length
arr.length
arr
next_idx..end_idx
c
s
c
element_idxc\
element_idx
arr
current
next_idx
c
([current] + arr[next_idx..end_idx]).sum
arr[next_idx..end_idx]
s
n
c
arr[next_idx...end_idx]
next_idx
s
n
c
([current] + arr[element_idx..next_idx])
s
(element_idx + 1..arr.length)
c
([current] + arr[element_idx..next_idx])
s
current
largest
n
sub_arrs
n
sub_arrs
c
sub_arrs
