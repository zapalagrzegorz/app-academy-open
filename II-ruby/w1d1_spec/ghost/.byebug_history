c
exit
finish
c
disable breakpoints
c
disable b
disable
c
disable
finish
delete
c
dictionary
n
s
exit
@dictionary
n
s
c
n
s
n
s
exit
n
s
c
s
n
line=
line
line=
s
c
exit
dictionary
@dictionary.any? { |word| word.start_with?(newFragment) }
word
newFragment
n
s
c
n
wordIncludeFragment
n
m
newFragment
n
s
exit
c
n
dictionary
exit
dictionary
c
n
game.players.length
game.players
c
n
losses
s
n
c
display game_check_eleminate
n
display @@players
displat @@players
exit
display game_check_eleminate.losses
display game_check_eleminate
c
display losses
display looses
s
n
c
n
losses
n
s
display game_check_eleminate.losses
n
display game_check_eleminate
display
n
display game_check_eleminate.losses
n
game_check_eleminate.players
exit
game_check_eleminate.players
exit
wordIncludeFragment
n
newFragment
n
s
exit
string
wordIncludeFragment
n
s
exit
n
s
exit
c
n
c
losses[player]
losses
player.name
player
losses[player.name]
losses[player.name]]
"GHOST"[0..losses[player.name].length]
c
n
exit
losses
losses[player.name]
losses[player.name[
player
s
exit
:q
e
player.id
losses[player]
losses.player
losses
player
losses[player]
player
"GHOST"[0..0]
"GHOST"[0..1]
s
@losses
@current_player
@current_player.name
s
c
display fragment
c
n
b
n
display dict
display
disply dict
n
exit
exist
n
s
list=
line=
display line
display dict
break 31
break 29
