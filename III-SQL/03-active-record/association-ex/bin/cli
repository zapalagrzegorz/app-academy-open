#!/usr/bin/env ruby
# frozen_string_literal: true

get_user
ask_command

class CLI
  def initialize
    @user = get_user

    ask_command
  end

  def get_user
    user = nil
    until user
      puts 'Input your email:'
      email = STDIN.gets.chomp
      user = User.where(email: email)
    end

    user
  end

  def ask_command
    user_command = nil
    until %w[1 2].include?(user_command)
      puts 'What do you want to do?'
      puts '0. Create shortened URL'
      puts '1. Visit shortened URL'
      user_command = STDIN.gets.chomp
    end

    create_url if user_command == 1
  end

  def create_url
    puts 'Type in your long url'
    long_url = STDIN.gets.chomp
  end
end

# create short URL

puts 'Type in your long url'
# get URL
# create URL
# > http://www.appacademy.io

puts "Short url is: #{shortURL}"
puts 'Goodbye!'

# ~/repos/appacademy/URLShortener$ rails runner bin/cli

# SECOND LINE

# What do you want to do?
# 0. Create shortened URL
# 1. Visit shortened URL
# > 1

puts 'Type in the shortened URL'
# > Pm6T7vWIhTWfMzLaT02YHQ
# check for URL
# if exists
# run launchy

puts "Launching #{longURL} ..."
puts 'Goodbye!'

# ~/repos/appacademy/URLShortener$ rails c
# Loading development environment (Rails 3.2.11)
# 1.9.3-p448 :001 > ShortenedUrl.find_by(short_url: "Pm6T7vWIhTWfMzLaT02YHQ").visits
#   ShortenedUrl Load (0.1ms)  SELECT "shortened_urls".* FROM "shortened_urls" WHERE # "shortened_urls"."short_url" = 'Pm6T7vWIhTWfMzLaT02YHQ' LIMIT 1
#   Visit Load (0.1ms)  SELECT "visits".* FROM "visits" WHERE "visits"."shortened_url_id" = 1
#  => [#<Visit id: 1, user_id: 1, shortened_url_id: 1, created_at: "2013-08-18 19:15:55", # updated_at: "2013-08-18 19:15:55">]
