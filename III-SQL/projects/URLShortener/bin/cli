#!/usr/bin/env ruby
# frozen_string_literal: true

require 'byebug'

class CLI
  def initialize
    @user = get_user

    ask_command
  end

  def get_user
    user = nil
    until user
      puts 'Input your email:'
      email = STDIN.gets.chomp
      user = User.find_by(email: email)
    end
    # debugger
    puts

    user
  end

  def ask_command
    user_command = nil
    until %w[0 1].include?(user_command)
      puts 'What do you want to do?'
      puts '0. Create shortened URL'
      puts '1. Visit shortened URL'
      user_command = STDIN.gets.chomp
    end

    create_url if user_command == '0'
    visit_url if user_command == '1'

    puts 'Goodbye'
  end

  def create_url
    puts 'Type in your long url'
    long_url = STDIN.gets.chomp
    short_url = ShortenedUrl.generate_shortened_url(user: @user, long_url: long_url).short_url
    puts "Short url is: #{short_url}"
  end

  def visit_url
    url = nil
    until url
      puts 'Type in the shortened URL'
      short_url = STDIN.gets.chomp
      url = ShortenedUrl.find_by(short_url: short_url)
      url ||= ShortenedUrl.find_by(short_url: 's7Tec_4Vi9SziqIq9qLZaQ')
    end

    puts "Launching #{url.long_url} ..."

    Visit.record_visit!(shortened_url_id: url.id, user_id: @user.id)
    Launchy.open(url.long_url)
  end
end

CLI.new

# ~/repos/appacademy/URLShortener$ rails c
# Loading development environment (Rails 3.2.11)
# 1.9.3-p448 :001 > ShortenedUrl.find_by(short_url: "Pm6T7vWIhTWfMzLaT02YHQ").visits
#   ShortenedUrl Load (0.1ms)  SELECT "shortened_urls".* FROM "shortened_urls" WHERE # "shortened_urls"."short_url" = 'Pm6T7vWIhTWfMzLaT02YHQ' LIMIT 1
#   Visit Load (0.1ms)  SELECT "visits".* FROM "visits" WHERE "visits"."shortened_url_id" = 1
#  => [#<Visit id: 1, user_id: 1, shortened_url_id: 1, created_at: "2013-08-18 19:15:55", # updated_at: "2013-08-18 19:15:55">]
